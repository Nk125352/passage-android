plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    id "org.openapi.generator" version "6.3.0"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "id.passage.passageflex"
version = "0.1.0"

def localProperties = new Properties()
File localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { localProperties.load(it) }
} else {
    println "local.properties file not found. Skipping..."
}

android {
    namespace "id.passage.passageflex"
    compileSdk 34

    defaultConfig {
        minSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        consumerProguardFiles("consumer-rules.pro")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main {
            kotlin {
                srcDir("$projectDir/generated/src/main/kotlin")
            }
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "com.google.android.material:material:1.11.0"
    implementation 'androidx.credentials:credentials:1.2.0'
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // For simplifying network requests
    implementation "com.squareup.okhttp3:okhttp:4.10.0"

    // For JSON serialization and parsing
    implementation "com.squareup.moshi:moshi:1.14.0"
    implementation "com.squareup.moshi:moshi-adapters:1.14.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.14.0"
}

openApiGenerate {
    generatorName = "kotlin"
    remoteInputSpec = "https://api.swaggerhub.com/apis/passage/passage-auth-api/1"
    outputDir = "$projectDir/generated".toString()
    apiPackage = "id.passage.android.passageflex.api"
    modelPackage = "id.passage.android.passageflex.model"
    configOptions = [
            useCoroutines: "true",
            "apiSuffix": "API",
            "packageName": "id.passage.passageflex.client",
            "moshiCodeGen": "true"
    ]
}

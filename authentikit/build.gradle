plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'id.passage.android'
version = '0.1.0'

android {
    namespace 'id.passage.authentikit'
    compileSdk 34

    defaultConfig {
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName '0.1.0'

        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version

            afterEvaluate {
                from components.release
            }

            pom {
                name = 'Authentikit'
                description = "Authentikit evaluates the passkey readiness of a user's device."
                url = 'https://github.com/passageidentity/passage-android'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/passageidentity/passage-android/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'passageidentity'
                        name = 'Passage Identity'
                        email = 'authentigator@passage.id'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/passageidentity/passage-android.git'
                    developerConnection = 'scm:git:ssh://github.com/passageidentity/passage-android.git'
                    url = 'https://github.com/passageidentity/passage-android'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

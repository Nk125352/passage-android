name: Create Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        required: true
        type: choice
        description: What type of release
        options:
          - major
          - minor
          - patch

jobs:
  determine-next-versions:
    name: Determine Next Version
    runs-on: ubuntu-latest

    outputs:
      next-major: ${{ steps.nexttag.outputs.major }}
      next-minor: ${{ steps.nexttag.outputs.minor }}
      next-patch: ${{ steps.nexttag.outputs.patch }}
      branch-major: ${{ steps.branchnames.outputs.major-branch }}
      branch-minor: ${{ steps.branchnames.outputs.minor-branch }}
      branch-patch: ${{ steps.branchnames.outputs.patch-branch }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Previous Tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 0.0.0

      - name: Get Next Versions
        id: nexttag
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Build Branch Names
        id: branchnames
        run: |
          echo "major-branch=release-major-v${{ steps.nexttag.outputs.major }}" >> $GITHUB_ENV
          echo "minor-branch=release-minor-v${{ steps.nexttag.outputs.minor }}" >> $GITHUB_ENV
          echo "patch-branch=release-patch-v${{ steps.nexttag.outputs.patch }}" >> $GITHUB_ENV

  create-release-branch:
    name: Create Release Branch
    runs-on: ubuntu-latest
    needs: determine-next-versions

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create release branch
        run: |
          if [ "${{ github.event.inputs.release-type }}" == "major" ]; then
            git checkout -b ${{ needs.determine-next-versions.outputs.branch-major }}
            git push origin ${{ needs.determine-next-versions.outputs.branch-major }}
            echo "BRANCH=${{ needs.determine-next-versions.outputs.branch-major }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.release-type }}" == "minor" ]; then
            git checkout -b ${{ needs.determine-next-versions.outputs.branch-minor }}
            git push origin ${{ needs.determine-next-versions.outputs.branch-minor }}
            echo "BRANCH=${{ needs.determine-next-versions.outputs.branch-minor }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.release-type }}" == "patch" ]; then
            git checkout -b ${{ needs.determine-next-versions.outputs.branch-patch }}
            git push origin ${{ needs.determine-next-versions.outputs.branch-patch }}
            echo "BRANCH=${{ needs.determine-next-versions.outputs.branch-patch }}" >> $GITHUB_ENV
          fi

  bump-version:
    name: Bump the Version
    runs-on: ubuntu-latest
    needs: [determine-next-versions, create-release-branch]

    steps:
      - name: Set release type environment variables
        run: |
          echo "RELEASE_TYPE=${{ github.event.inputs.release-type }}" >> $GITHUB_ENV
          echo "NEXT_VERSION=$(eval echo \${{ needs.determine-next-versions.outputs.next-${{ github.event.inputs.release-type }}} })" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(eval echo \${{ needs.determine-next-versions.outputs.branch-${{ github.event.inputs.release-type }}} })" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Update version
        run: |
          sed -i "s/versionName \".*\"/versionName \"$NEXT_VERSION\"/" app/build.gradle
          sed -i "s/versionCode .*/versionCode ${NEXT_VERSION//./}/" app/build.gradle
          echo "Updated to version $NEXT_VERSION"

      - name: Update version in README
        run: |
          sed -i "s/version: [0-9]*\.[0-9]*\.[0-9]*/version: $NEXT_VERSION/" README.md
          echo "Updated README to version $NEXT_VERSION"

      - name: Commit version change
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Bumped version to $NEXT_VERSION"
          branch: ${{ env.BRANCH_NAME }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [determine-next-versions, create-release-branch, bump-version]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.NEXT_VERSION }}"
          generateReleaseNotes: true
          draft: false

  publish-sdk:
    name: Publish SDK
    runs-on: ubuntu-latest
    needs: [determine-next-versions, create-release-branch, bump-version, create-github-release]

    steps:
      - name: Trigger publish workflow
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"publish"}'
